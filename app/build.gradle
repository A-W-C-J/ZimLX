apply plugin: 'com.android.application'
if (enable_plugin_kotlin) {
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'
    apply plugin: 'kotlin-kapt'
}
android {
    compileSdkVersion version_setup_compileSdk
    buildToolsVersion version_setup_buildTools

    def versionPropsFile = file('../version.properties')

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def name = versionProps['VERSION_NAME']
        def code = versionProps['VERSION_CODE'].toInteger() + 1

        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            minSdkVersion version_setup_minSdk
            targetSdkVersion version_setup_targetSdk

            flavorDimensions "versionCode"
            multiDexEnabled false

            buildConfigField "boolean", "IS_TEST_BUILD", "false"
            buildConfigField "boolean", "IS_GPLAY_BUILD", "false"
            buildConfigField "String[]", "DETECTED_ANDROID_LOCALES", "${findUsedAndroidLocales()}"
            buildConfigField "String", "BUILD_DATE", "\"${getBuildDate()}\""
            buildConfigField "String", "GITHASH", "\"${getGitHash()}\""
            resValue "string", "manifest_package_id", "org.zimmob.zimlx"

            resValue 'string', 'app_name', "ZimLX"

            applicationId "org.zimmob.zimlx"
            versionName name
            versionCode code
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }


    productFlavors {
        flavorTest {
            buildConfigField "boolean", "IS_TEST_BUILD", "true"
            resValue 'string', 'app_name', "OL Nightly"
            versionCode = Integer.parseInt(new Date().format('yyMMdd'))
            versionName = new Date().format('yyMMdd')
            applicationId "io.github.openlauncherteam.openlauncher.test"
        }
        flavorDefault {
        }
    }
    lintOptions {
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
        abortOnError false
    }
    configurations.all {
        resolutionStrategy {
            eachDependency { details ->
                if (details.requested.group == 'com.android.support') {
                    if (details.requested.name != 'multidex' && details.requested.name != 'multidex-instrumentation') {
                        details.useVersion "${version_library_appcompat}"
                    }
                }
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            pseudoLocalesEnabled true
        }
    }
    sourceSets {
        if (enable_plugin_kotlin) {
            main.java.srcDirs += 'src/main/kotlin'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
    }
}

dependencies {
    // Support libraries
    implementation "com.android.support:recyclerview-v7:${version_library_appcompat}"
    implementation "com.android.support:appcompat-v7:${version_library_appcompat}"
    implementation "com.android.support:cardview-v7:${version_library_appcompat}"
    implementation "com.android.support:design:${version_library_appcompat}"
    implementation "com.android.support:support-v13:${version_library_appcompat}"
    implementation "com.android.support:preference-v7:${version_library_appcompat}"
    implementation "com.android.support:preference-v14:${version_library_appcompat}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    // UI Libs
    implementation 'com.mikepenz:fastadapter:3.2.6@aar'
    implementation 'com.mikepenz:fastadapter-commons:3.2.6@aar'
    implementation 'com.mikepenz:fastadapter-extensions:3.2.6@aar'
    implementation 'jp.wasabeef:recyclerview-animators:2.2.7'
    implementation 'com.eightbitlab:blurview:1.3.3'
    implementation 'com.prolificinteractive:material-calendarview:1.4.3'
    implementation 'com.afollestad.material-dialogs:commons:0.9.6.0'
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.balysv:material-ripple:1.0.2'
    implementation 'agency.tango.android:material-intro-screen:0.0.5'
    implementation 'cat.ereza:customactivityoncrash:2.2.0'
    implementation 'de.psdev.licensesdialog:licensesdialog:1.8.3'
    implementation 'com.jaredrummler:colorpicker:1.0.1'
    implementation 'in.championswimmer:SimpleFingerGestures_Android_Library:1.2@aar'
    implementation('com.github.ozodrukh:CircularReveal:2.1.0') {
        transitive = true
    }
    implementation('com.github.turing-tech:MaterialScrollBar:12.+') {
        exclude group: 'com.android.support'
    }
    // Tools
    implementation "com.jakewharton:butterknife:${version_library_butterknife}"
    if (enable_plugin_kotlin) {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$version_plugin_kotlin"
    }
    // Processors
    def anpros = ["com.jakewharton:butterknife-compiler:${version_library_butterknife}"]
    for (anpro in anpros) {
        if (enable_plugin_kotlin) {
            kapt anpro
        } else {
            annotationProcessor anpro
        }
    }
}
repositories {
    jcenter()
    google()
    mavenCentral()
    maven { url "https://jitpack.io" }
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
